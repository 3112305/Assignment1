//function prototypes  return_type name(arguments);
char fileRead(char);        // function for reading message, pass filename and return contents of file
int getRotKey(void);        // gets key from file rotRyphKey.txt
char rotateKey(char, int);  // rotational function with key, pass message and key, return rotated message
char rotateNoKey(char);     // rotational function without key, pass message, return rotated message, write key to stdout
char getSubKey(void);       // gets key from file subCiphKey.txt, returns key
char substKey(char, char);  //substitution function, pass message, key, return ciphered message
char substNoKey(char);      //substitution cipher function prototype
void fileWrite(char, char);       // function for file writing, pass message, filename and write file, no returns



//function blocks
char fileRead(char filename){...}  // function for reading message, pass filename and return contents of file
int getRotKey(void){...}  // gets key from file rotRyphKey.txt
char rotateKey(char message, int key){...}// rotational function with key, pass message and key, return rotated message
char rotateNoKey(char message){...}// rotational function without key, pass message, return rotated message, write key to stdout
char getSubKey(void){...}// gets key from file subCiphKey.txt, returns key
char substKey(char message, char key){...}//substitution function, pass message, key, return ciphered message
char substNoKey(char message){...}//substitution cipher function prototype
void fileWrite(char filename, char message){...}// function for file writing, pass me
char printMessage(char){...}// reads message fil